function processiXBRL(n) {
    if (1 != n.nodeType || "IX:NONNUMERIC" != n.nodeName && "IX:NONFRACTION" != n.nodeName) {
        if (1 == n.nodeType && "XBRLI:CONTEXT" == n.nodeName) {
            var context = {},
                p = n.getElementsByTagName("XBRLI:PERIOD")[0];
            p.getElementsByTagName("XBRLI:STARTDATE").length > 0 ? (context.startDate = p.getElementsByTagName("XBRLI:STARTDATE")[0].textContent, context.endDate = p.getElementsByTagName("XBRLI:ENDDATE")[0].textContent) : context.instant = p.getElementsByTagName("XBRLI:INSTANT")[0].textContent;
            var segment = n.getElementsByTagName("XBRLI:ENTITY")[0].getElementsByTagName("XBRLI:SEGMENT")[0];
            if (context.dimensions = {}, segment)
                for (var explicitMembers = segment.getElementsByTagName("XBRLDI:EXPLICITMEMBER"), i = 0; i < explicitMembers.length; i++) context.dimensions[explicitMembers[i].getAttribute("dimension")] = explicitMembers[i].textContent;
                for (var typedMembers = segment.getElementsByTagName("XBRLDI:TYPEDMEMBER"), i = 0; i < typedMembers.length; i++) context.dimensions[typedMembers[i].getAttribute("dimension")] = typedMembers[i].textContent;
            var identifier = n.getElementsByTagName("XBRLI:ENTITY")[0].getElementsByTagName("XBRLI:IDENTIFIER")[0];
            context.entity = {
                scheme: identifier.getAttribute("scheme"),
                identifier: identifier.textContent
            }, contexts[n.getAttribute("id")] = context
        } else if (1 == n.nodeType && "XBRLI:UNIT" == n.nodeName) {
            var u = n.getElementsByTagName("XBRLI:MEASURE")[0].textContent;
            units[n.getAttribute("id")] = u
        }
    } else {
        var wrapper = "span";
        for (nn = n.getElementsByTagName("*"), i = 0; i < nn.length; i++)
            if ("block" === $(nn[i]).css("display")) {
                wrapper = "div";
                break
            }
        "IX:NONFRACTION" == n.nodeName && $(n).wrap("<" + wrapper + ' class="ixbrl-element ixbrl-element-nonfraction"></' + wrapper + ">"), "IX:NONNUMERIC" == n.nodeName && $(n).wrap("<" + wrapper + ' class="ixbrl-element ixbrl-element-nonnumeric"></' + wrapper + ">")
    }
    for (i = 0; i < n.childNodes.length; i++) processiXBRL(n.childNodes[i])
}

function ixbrlDetails(x) {
    n = x.get(0).childNodes[0];
    var details = {};
    return details.concept = n.getAttribute("name"), details.rawValue = n.textContent, x.hasClass("ixbrl-element-nonnumeric") ? details.value = details.rawValue : (details.scale = n.getAttribute("scale") || 0, details.value = details.rawValue.replace(/[^0-9.]/g, "") * Math.pow(10, details.scale), n.getAttribute("sign") && (details.value *= -1), details.value = details.value.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,")), details.contextId = n.getAttribute("contextRef"), details.unitId = n.getAttribute("unitRef"), details
}

function symbolForUnit(unit) {
    var s = "$";
    if (unit && unit.startsWith("iso4217:")) switch (matches = unit.match(/:([^:]+)$/), matches[1]) {
        case "EUR":
            s = "â‚¬";
            break;
        case "GBP":
            s = "Â£";
            break;
        case "USD":
            s = "$"
    }
    return s
}

function inspectorHidden() {
    return inspectorPos < 0
}

function showHideInspector() {
    var i = $(".ixbrl-inspector");
    inspectorPos = inspectorPos < 0 ? 0 : 0 - i.width(), i.animate({
        right: inspectorPos
    })
}
var styleNode = document.createElement("style");
styleNode.innerHTML = " .ixbrl-inspector { position: fixed; right: -300px; top: 0px; bottom: 0px; width: 300px; /*height: 400px;*/ border-left: solid 1px black; box-shadow: -5px 0px 5px #777777; background-color: #bbbbff; opacity: 0.9; z-index: 10; box-sizing: border-box; font-family: sans-serif; font-size: initial; } .ixbrl-inspector h1 { box-sizing: content-box; padding: 10px; color: white; background-color: #222277; font-size: 20px; margin: 0 0; display: block; font-family: sans-serif; text-align: left; position: absolute; transform: rotate(270deg); width: 150px; top: 63px; left: -108px; border-left: solid 1px black; border-top: solid 1px black; cursor: pointer; text-transform: none; } .ixbrl-inspector > div { padding: 10px; } .ixbrl-highlight, .ixbrl-selected { background-color: yellow; } .ixbrl-selected, .ixbrl-element:hover { outline: dashed 1px black; } .ixbrl-element { cursor: pointer; position: relative; } .ixbrl-fact-details { padding: 10px; } .ixbrl-fact-detail-title { font-weight: bold; margin-bottom: 10px; margin-top: 15px; border-top: dashed 1px #aaa; padding-top: 15px; } .ixbrl-fact-detail-value { padding-left: 10px; margin-bottom: 10px; }", document.head.appendChild(styleNode);
var contexts = {},
    units = {},
    inspectorPos = -300,
    inspectorDragged = !1,
    wrapper = document.createElement("div");
wrapper.innerHTML = '    <div class="ixbrl-inspector">      <h1>Inline XBRL</h1>      <div>        <form>        <p>        <label><input type="checkbox" id="ixbrl-show-all-tags"> Highlight all tags</label>        </p>      </form>      </div>      <div class="ixbrl-fact-details">        <div class="ixbrl-fact-detail-title">          Line item        </div>        <div class="ixbrl-fact-detail-value" id="ixbrl-fact-concept-name">          -        </div>        <div class="ixbrl-fact-detail-title">          Value        </div>        <div class="ixbrl-fact-detail-value" id="ixbrl-fact-value">          -        </div>        <div class="ixbrl-fact-detail-title">          Period        </div>        <div class="ixbrl-fact-detail-value" id="ixbrl-fact-period">          -        </div>        <div id="ixbrl-fact-dimensions"></div>        <div class="ixbrl-fact-detail-title">          Units        </div>        <div class="ixbrl-fact-detail-value" id="ixbrl-fact-units">          -        </div>        <div class="ixbrl-fact-detail-title">          Entity        </div>        <div class="ixbrl-fact-detail-value" id="ixbrl-fact-entity">          -        </div>      </div>    </div>', $(function() {
    document.body.appendChild(wrapper), processiXBRL(document.body), interact(".ixbrl-inspector", {
        allowFrom: ".ixbrl-inspector h1"
    }).resizable({
        preserveAspectRatio: !1,
        edges: {
            left: !0,
            right: !1,
            bottom: !1,
            top: !1
        }
    }).on("down", function(event) {
        inspectorDragged = !1
    }).on("up", function(event) {
        inspectorDragged || (showHideInspector(), $("html").css("cursor", ""))
    }).on("resizemove", function(event) {
        var target = event.target,
            dx = event.deltaRect.left,
            w = $(target).width();
        w -= dx, inspectorPos < 0 && w > 200 && (w += inspectorPos, inspectorPos = 0), w < 200 && (inspectorPos -= 200 - w, w = 200), $(target).width(w), $(target).css("right", inspectorPos + "px"), inspectorDragged = !0
    }), $("body").click(function(e) {
        0 == $(e.target).closest(".ixbrl-element").length && $(".ixbrl-element").removeClass("ixbrl-selected")
    }), $(".ixbrl-element").click(function(e) {
        inspectorHidden() && showHideInspector(), e.stopPropagation(), $(".ixbrl-element").removeClass("ixbrl-selected"), $(this).addClass("ixbrl-selected"), details = ixbrlDetails($(this)), $("#ixbrl-fact-concept-name").text(details.concept);
        var u = units[details.unitId];
        $("#ixbrl-fact-value").text(symbolForUnit(u) + " " + details.value);
        var c = contexts[details.contextId];
        void 0 === c.startDate ? $("#ixbrl-fact-period").text(c.instant) : $("#ixbrl-fact-period").text(c.startDate + " to " + c.endDate), u ? $("#ixbrl-fact-units").text(u) : $("#ixbrl-fact-units").text("-");
        var dimStr = "";
        for (var d in c.dimensions) dimStr += '<div class="ixbrl-fact-detail-title">' + d + '</div><div class="ixbrl-fact-detail-value">' + c.dimensions[d] + "</div>";
        $("#ixbrl-fact-dimensions").html(dimStr);
        var entityStr;
        entityStr = "http://standards.iso.org/iso/17442" == c.entity.scheme ? '<a target="_blank" href="https://www.gleif.org/lei/' + c.entity.identifier + '">' + c.entity.identifier + "</a>" : "http://www.companieshouse.gov.uk/" == c.entity.scheme ? '<a target="_blank" href="https://beta.companieshouse.gov.uk/company/' + c.entity.identifier + '">' + c.entity.identifier + "</a>" : c.entity.identifier, $("#ixbrl-fact-entity").html(entityStr)
    }), $("#ixbrl-show-all-tags").change(function(e) {
        this.checked ? $(".ixbrl-element").addClass("ixbrl-highlight") : $(".ixbrl-element").removeClass("ixbrl-highlight")
    })
});